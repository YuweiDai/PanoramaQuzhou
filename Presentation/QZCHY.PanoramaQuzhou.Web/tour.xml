<krpano version="1.19" title="衢州全景地图" tileserver="http://220.191.238.125/resources/">
  <!-- customize skin settings: maps, gyro, webvr, thumbnails, tooltips, layout, design, ... -->
  <skin_settings maps="true"
	               maps_type="google"
	               maps_bing_api_key=""
	               maps_google_api_key=""
	               maps_zoombuttons="false"
	               gyro="true"
	               webvr="true"
	               webvr_gyro_keeplookingdirection="false"
	               webvr_prev_next_hotspots="true"
	               littleplanetintro="true"
	               title="true"
	               thumbs="true"
	               thumbs_width="120" thumbs_height="80" thumbs_padding="10" thumbs_crop="0|40|240|160"
	               thumbs_opened="false"
	               thumbs_text="true"
	               thumbs_dragging="true"
	               thumbs_onhoverscrolling="false"
	               thumbs_scrollbuttons="false"
	               thumbs_scrollindicator="false"
	               thumbs_loop="false"
	               tooltips_buttons="false"
	               tooltips_thumbs="false"
	               tooltips_hotspots="false"
	               tooltips_mapspots="false"
	               deeplinking="false"
	               loadscene_flags="MERGE"
	               loadscene_blend="OPENBLEND(0.5, 0.0, 0.75, 0.05, linear)"
	               loadscene_blend_prev="SLIDEBLEND(0.5, 180, 0.75, linear)"
	               loadscene_blend_next="SLIDEBLEND(0.5,   0, 0.75, linear)"
	               loadingtext="loading..."
	               layout_width="100%"
	               layout_maxwidth="814"
	               controlbar_width="-24"
	               controlbar_height="40"
	               controlbar_offset="20"
	               controlbar_offset_closed="-40"
	               controlbar_overlap.no-fractionalscaling="10"
	               controlbar_overlap.fractionalscaling="0"
	               design_skin_images="vtourskin.png"
	               design_bgcolor="0x2D3E50"
	               design_bgalpha="0.8"
	               design_bgborder="0"
	               design_bgroundedge="1"
	               design_bgshadow="0 4 10 0x000000 0.3"
	               design_thumbborder_bgborder="3 0xFFFFFF 1.0"
	               design_thumbborder_padding="2"
	               design_thumbborder_bgroundedge="0"
	               design_text_css="color:#FFFFFF; font-family:Arial;"
	               design_text_shadow="1"
	               />


  <!-- startup action - load the first scene -->
  <include  url ="plugins/auto_thumbs.xml"/>
  <include  url ="plugins/tooltip.xml"/>


  <action name="skin_setup_littleplanetintro">
    copy(lp_scene, xml.scene);
    copy(lp_hlookat, view.hlookat);
    copy(lp_vlookat, view.vlookat);
    copy(lp_fov, view.fov);
    copy(lp_fovmax, view.fovmax);
    copy(lp_limitview, view.limitview);
    set(view.fovmax, 170);
    set(view.limitview, lookto);
    set(view.vlookatmin, 90);
    set(view.vlookatmax, 90);
    set_hotspot_visible(false);
    set(layer[skin_layer].visible,false);set(layer[skin_layer].alpha,0);
    set(layer[skin_control_bar].visible,false);set(layer[skin_control_bar].alpha,0);
    set(layer[skin_splitter_bottom].visible,false);set(layer[skin_splitter_bottom].alpha,0);
    lookat(calc(lp_hlookat - 180), 90, 150, 1, 0, 0);
    set(lp_running,true);
    set(events[lp_events].onloadcomplete,
    delayedcall(1.5,
    if(lp_scene === xml.scene,
    set(control.usercontrol, off);
    copy(view.limitview, lp_limitview);
    set(view.vlookatmin, null);
    set(view.vlookatmax, null);
    tween(view.hlookat|view.vlookat|view.fov|view.distortion, calc('' + lp_hlookat + '|' + lp_vlookat + '|' + lp_fov + '|' + 0.0),
    3.0, easeOutQuad,
    set(control.usercontrol, all);
    tween(view.fovmax, get(lp_fovmax));
    );
    set(lp_running,false);
    set_hotspot_visible(true);
    set(layer[skin_layer].visible,true);tween(layer[skin_layer].alpha,1,1);
    set(layer[skin_control_bar].visible,true);tween(layer[skin_control_bar].alpha,1,1);
    set(layer[skin_splitter_bottom].visible,true);tween(layer[skin_splitter_bottom].alpha,1,1);
    );
    );
    );

  </action>
  
  
  <action name="set_hotspot_visible">
    for(set(i,0),i LT hotspot.count,inc(i),
    if(%1 == false,
    if(hotspot[get(i)].visible == true,
    set(hotspot[get(i)].mark,true);set(hotspot[get(i)].visible,%1);
    );
    ,
    if(hotspot[get(i)].mark == true OR hotspot[get(i)].mark2 == true,
    set(hotspot[get(i)].visible,%1);
    );
    );

    );
  </action>

  <events name="littleplanetintro_control" keep="true"
		onnewpano="
		stoptween(view.hlookat|view.vlookat|view.fov|view.distortion);
                skin_setup_littleplanetintro()
		)"
 
		/>
   

  <!-- include VR support -->
  <include url="plugins/webvr.xml" />

  <!-- overwrite some settings from the webvr.xml for the skin integration -->
  <plugin name="WebVR" keep="true" devices="html5"
	        multireslock.desktop="true"
	        multireslock.mobile.or.tablet="false"
	        mobilevr_fake_support="true"
	        onavailable="removelayer(webvr_enterbutton); skin_arrange_buttons(); webvr_onavailable();"
	        onentervr="skin_showloading(false); webvr_onentervr(); webvr_setup();"
	        onexitvr="webvr_onexitvr(); webvr_setup();"
	        />

  <!-- webvr button style (adjust to match default skin style) -->
  <style name="webvr_button_style"
	       border="false"
	       shadow="0.01" shadowrange="9.0" shadowcolor="0xFFFFFF" shadowalpha="0.5"
	       />

  <!-- show a 'rotate the device' info when the mobile device is in portrait mode in VR mode -->
  <layer name="webvr_rotate_to_landscape_request" keep="true" vr="true" devices="mobile"
	       url="rotate_device.png" scale="0.5"
	       align="top" edge="center" y="28%"
	       autoalpha="true" alpha="0.0"
	       enabled="false"
	       />

  <events name="webvr_events" keep="true" devices="html5"
	        onresize.mobile="webvr_act_as_gyro_in_portrait_mode();"
	        onviewchange=""
	        />

  <action name="webvr_setup">
    if(webvr.isenabled,
    set(display.hotspotrenderer, webgl);
    copy(loadscene_flags_backup, skin_settings.loadscene_flags);
    set(skin_settings.loadscene_flags, MERGE|KEEPVIEW|KEEPMOVING|NOPREVIEW);
    webvr_act_as_gyro_in_portrait_mode(true);
    if(scene.count GT 1,
    set(hotspot[webvr_prev_scene].visible, true);
    set(hotspot[webvr_next_scene].visible, true);
    set(events[webvr_events].onviewchange, webvr_menu_following());
    );
    ,
    set(display.hotspotrenderer, auto);
    if(loadscene_flags_backup !== null, copy(skin_settings.loadscene_flags, loadscene_flags_backup));
    tween(layer[webvr_rotate_to_landscape_request].alpha, 0.0, 0.0);
    set(hotspot[webvr_prev_scene].visible, false);
    set(hotspot[webvr_next_scene].visible, false);
    set(events[webvr_events].onviewchange, null);
    );
  </action>

  <action name="webvr_act_as_gyro_in_portrait_mode">
    if(device.mobile AND webvr.isenabled,
    div(aspect, stagewidth, stageheight);
    if(aspect != lastaspect OR '%1' == 'true',
    copy(lastaspect, aspect);
    if(stagewidth GT stageheight,
    <!-- landscape mode - use stereo rendering and a direct/fast gyro sensor mode -->
    set(display.stereo, true);
    set(webvr.mobilevr_sensor_mode, 3);
    webvr.update();
    tween(layer[webvr_rotate_to_landscape_request].alpha, 0.0, 0.0);
    ,
    <!-- portrait mode - use normal rendering and a smoother/slower gyro sensor mode -->
    set(display.stereo, false);
    set(webvr.mobilevr_sensor_mode, 1);
    webvr.update();
    tween(layer[webvr_rotate_to_landscape_request].alpha, 1.0);
    delayedcall(3.0, tween(layer[webvr_rotate_to_landscape_request].alpha, 0.0, 1.0); );
    );
    );
    ,
    set(lastaspect, 0);
    );
  </action>

  <!-- VR scene switching hotspots -->
  <style name="webvr_menu_style" depth="800" scale="0.5" distorted="true" ath="0" atv="45" alpha="0.5" />
  <hotspot name="webvr_prev_scene" keep="true" style="skin_base|webvr_menu_style" crop="0|64|64|64"  ox="-64" onover="tween(scale,0.6);" onout="tween(scale,0.5);" vr_timeout="750" onclick="skin_nextscene_loop(-1);" visible="false" devices="html5.and.webgl" />
  <hotspot name="webvr_next_scene" keep="true" style="skin_base|webvr_menu_style" crop="64|64|64|64" ox="+64" onover="tween(scale,0.6);" onout="tween(scale,0.5);" vr_timeout="750" onclick="skin_nextscene_loop(+1);" visible="false" devices="html5.and.webgl" />

  <!-- floating/following VR hotspots -->
  <action name="webvr_menu_following" type="Javascript" devices="html5">
    <![CDATA[
		var hs1 = krpano.get("hotspot[webvr_prev_scene]");
		var hs2 = krpano.get("hotspot[webvr_next_scene]");
		if(!hs1.hovering && !hs2.hovering)
		{
			var f = 0.01;	// follow speed factor
			var h = krpano.view.hlookat;
			var v = krpano.view.vlookat;
			var hsh = hs1.ath;
			var hsv = hs1.atv;
			h   = (h  -(h|0))   + (((h|0)  +360180)%360) - 180.0;
			v   = (v  -(v|0))   + (((v|0)  +360180)%360) - 180.0;
			hsh = (hsh-(hsh|0)) + (((hsh|0)+360180)%360) - 180.0;
			var dh = h - hsh;
			dh += (dh > 180) ? -360 : (dh < -180) ? 360 : 0
			hsh += dh*f;
			var a = Math.abs(v - hsv) / 90.0;
			a = 1.0 * Math.max(1.0 - 2.0*Math.sqrt(a), 0);
			v = v + 55.0 - v*1.5;
			hsv = hsv*(1.0 - f) + v*f;
			hs1.ath = hs2.ath = hsh;
			hs1.atv = hs2.atv = hsv;
			hs1.alpha = hs2.alpha = a;
		}
	]]>
  </action>
  <!-- VR support -->

  <!-- skin styles -->

  <!-- skin_base - the base skin image -->
  <style name="skin_base" url="skin/vtourskin.png" />

  <!-- skin_glow - button glowing (if additional ondown,onup,onout,over events are needed, this style provides ondown2,onup2,onover2,onout2 events) -->
  <style name="skin_glow"
	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"
	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); if(onover2, onover2() );"
	       onout="if(skin_lockglow === name AND !pressed, skin_buttonglow(null);delete(skin_lockglow); ); if(onout2, onout2() );"
	       onup="if(onup2, onup2()); delayedcall(0, if(hovering AND enabled, skin_buttonglow(get(name),0.3); , skin_buttonglow(null);delete(skin_lockglow); ); );"
	       />

  <!-- skin_hotspotstyle - style for the hotspots -->
  <style name="skin_hotspotstyle" url="vtourskin_hotspot.png" scale="0.5" edge="top" distorted="true"
	       tooltip=""
	       onclick="if(linkedscene, set(enabled,false); skin_hidetooltips(); tween(depth|alpha|oy|rx, 4000|0.0|-50|-60, 0.5, default, loadscene(get(linkedscene),null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend)); skin_updatescroll(); ); );"
	       onover="tween(scale,0.55);"
	       onout="tween(scale,0.5);"
	       onloaded="if(linkedscene AND skin_settings.tooltips_hotspots, copy(tooltip,scene[get(linkedscene)].title); loadstyle(skin_tooltips); );"
	       />


  <!-- gyro plugin -->
  <plugin name="skin_gyro" keep="true" url="" html5_url="%SWFPATH%/plugins/gyro2.js" devices="html5" enabled="false" onavailable="skin_arrange_buttons();" />

  <action name="skin_arrange_buttons">

    calc(show_vrbutton,   webvr.isavailable == true);
    copy(layer[skin_btn_vr].visible, show_vrbutton);

  </action>

  <action name="skin_nextscene">
    add(newsceneindex, scene[get(xml.scene)].index, %1);
    if(newsceneindex GE 0 AND newsceneindex LT scene.count,
    txtadd(layer[skin_thumbborder].parent, 'skin_thumb_', get(newsceneindex));
    layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));
    loadscene(get(scene[get(newsceneindex)].name),null,get(skin_settings.loadscene_flags),calc(%1 LT 0 ? skin_settings.loadscene_blend_prev : skin_settings.loadscene_blend_next));
    );
  </action>

  <action name="skin_nextscene_loop">
    add(newsceneindex, scene[get(xml.scene)].index, %1);
    sub(lastsceneindex, scene.count, 1);
    if(newsceneindex LT 0, copy(newsceneindex,lastsceneindex));
    if(newsceneindex GT lastsceneindex, set(newsceneindex,0));
    layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));
    loadscene(get(scene[get(newsceneindex)].name),null,get(skin_settings.loadscene_flags),calc(%1 LT 0 ? skin_settings.loadscene_blend_prev : skin_settings.loadscene_blend_next));
  </action>

  <action name="skin_buttonglow">
    if('%1' !== 'null',
    set(strength,0.7);
    if(%2 != null, set(strength,%2));
    set(layer[skin_buttonglow].parent, %1);
    set(layer[skin_buttonglow].visible, true);
    tween(layer[skin_buttonglow].alpha, get(strength), 0.07);
    ,
    tween(layer[skin_buttonglow].alpha, 0.0, 0.1, default,
    set(layer[skin_buttonglow].parent, null);
    set(layer[skin_buttonglow].visible, false);
    );
    );
  </action>
  
  


  <action name="startup" autorun="onstart">
    if(startscene === null OR !scene[get(startscene)], copy(startscene,scene[0].name); );
    loadscene(get(startscene), null, MERGE);
    if(startactions !== null, startactions() );
    set(layer[auto_thumbs].left,500);
    set(layer[auto_thumbs].visible,false);

    if(skin_settings.littleplanetintro AND (device.webgl OR device.flash),
    <!--skin_setup_littleplanetintro();-->
    );

  </action>



  <scene name="盈川小区" title="盈川小区" onstart="" thumburl="%$tileserver%panos/盈川小区.tiles/thumb.jpg" lat="28.98798333" lng="118.84598500" heading="0.0"  album="西区">

    <view hlookat="-110" vlookat="20" fovtype="MFOV" fov="120" maxpixelzoom="2.0" fovmin="70" fovmax="140" limitview="auto" />

    <preview url="%$tileserver%panos/盈川小区.tiles/preview.jpg" />

    <image prealign="0|0.0|0">
      <cube url="%$tileserver%panos/盈川小区.tiles/pano_%s.jpg" />
    </image>

  </scene>

  <scene name="衢时代创新大厦" title="衢时代创新大厦" onstart="" thumburl="%$tileserver%panos/衢时代创新大厦.tiles/thumb.jpg" lat="" lng="" heading="" >

    <view hlookat="0.0" vlookat="0.0" fovtype="MFOV" fov="120" maxpixelzoom="2.0" fovmin="70" fovmax="140" limitview="auto" />

    <preview url="%$tileserver%panos/衢时代创新大厦.tiles/preview.jpg" />

    <image>
      <cube url="%$tileserver%panos/衢时代创新大厦.tiles/pano_%s.jpg" />
    </image>

  </scene>

  <scene name="衢州西高速出口" title="衢州西高速出口" onstart="" thumburl="%$tileserver%panos/衢州西高速出口.tiles/thumb.jpg" lat="" lng="" heading="">

    <view hlookat="0.0" vlookat="0.0" fovtype="MFOV" fov="120" maxpixelzoom="2.0" fovmin="70" fovmax="140" limitview="auto" />

    <preview url="%$tileserver%panos/衢州西高速出口.tiles/preview.jpg" />

    <image>
      <cube url="%$tileserver%panos/衢州西高速出口.tiles/pano_%s.jpg" />
    </image>

  </scene>

  <scene name="西区新农都" title="西区新农都" onstart="" thumburl="%$tileserver%panos/西区新农都.tiles/thumb.jpg" lat="" lng="" heading="" >

    <view hlookat="0.0" vlookat="0.0" fovtype="MFOV" fov="120" maxpixelzoom="2.0" fovmin="70" fovmax="140" limitview="auto" />

    <preview url="%$tileserver%panos/西区新农都.tiles/preview.jpg" />

    <image>
      <cube url="%$tileserver%panos/西区新农都.tiles/pano_%s.jpg" />
    </image>

  </scene>


  <scene name="文昌阁" title="文昌阁" onstart="" thumburl="%$tileserver%panos/文昌阁.tiles/thumb.jpg" lat="28.98875944" lng="118.84959444" heading="0.0" album="老城区">

    <view hlookat="0.0" vlookat="0.0" fovtype="MFOV" fov="120" maxpixelzoom="2.0" fovmin="70" fovmax="140" limitview="auto" />

    <preview url="%$tileserver%panos/文昌阁.tiles/preview.jpg" />

    <image prealign="0|0.0|0">
      <cube url="%$tileserver%panos/文昌阁.tiles/pano_%s.jpg" />
    </image>

  </scene>
	
	<scene name="衢州东高速出口" title="衢州东高速出口" onstart="" thumburl="%$tileserver%panos/衢州东高速出口.tiles/thumb.jpg" lat="" lng="" heading="">

		<view hlookat="0.0" vlookat="0.0" fovtype="MFOV" fov="120" maxpixelzoom="2.0" fovmin="70" fovmax="140" limitview="auto" />

		<preview url="%$tileserver%panos/衢州东高速出口.tiles/preview.jpg" />

		<image>
			<cube url="%$tileserver%panos/衢州东高速出口.tiles/pano_%s.jpg" />
		</image>

	</scene>
  
  


</krpano>
